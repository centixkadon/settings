#!/bin/bash

color() {
  COLOR=0
  case ${1,,} in
    red)
      COLOR=1;;
    green)
      COLOR=2;;
    yellow)
      COLOR=3;;
    blue)
      COLOR=4;;
    magenta)
      COLOR=5;;
    cyan)
      COLOR=6;;
    white)
      COLOR=7;;
  esac
  echo "$(echo -e "\033[1;3${COLOR}m")${@:2}$(echo -e "\033[0m")"
}

logging() {
  COLOR=black
  case ${1,,} in
    debug)
      COLOR=white;;
    info)
      COLOR=green;;
    warning)
      COLOR=yellow;;
    error)
      COLOR=red;;
    critical)
      COLOR=magenta;;
  esac
  LEVEL="${1^^}        "
  echo "$(date "+%Y-%m-%d %H:%M:%S") [$(color ${COLOR} "${LEVEL:0:8}")] ${@:2}"
}

pause() {
  read -sp "press Enter to continue..." && echo
}

setVariable() {
  eval $2=$3
  logging info "set $(color white $1) to $(color cyan ${!2})"
}

readVariable() {
  VAR_DEFAULT=
  if [[ $# == 3 ]]
  then
    VAR_DEFAULT=" (default: $(color cyan $3))"
  fi
  read -p "input $(color white $1)${VAR_DEFAULT}: " $2
  eval $2=${!2%% *}
  setVariable "$1" $2 ${!2:-$3}
}

gitClone() {
  if [[ -e $2 && $1 == $(cd $2; git config --get remote.origin.url) ]]
  then
    pushd $2
    git pull
    popd
  else
    rm -rf $2
    git clone $1 $2
  fi
}

stty erase ^H
GITHUB_PATH=~/All/git/github
SETTINGS_PATH=${GITHUB_PATH}/centixkadon/settings


if [[ ${1,,} == "test" ]]
then
  logging notset Help Help
  logging debug Debug Debug
  logging info Info Info
  logging warning Warning Warning
  logging error Error Error
  logging critical Critical Critical
fi
